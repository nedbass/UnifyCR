#
#  Export some extra variables to test scripts specific to UnifyCR
#  test suite
#

#
#  UNIFYCR_BUILD_DIR and UNIFYCR_SOURCE_DIR are set to build and source paths
#  (based on current directory)
#
if test -z "$UNIFYCR_BUILD_DIR"; then
    if test -z "${builddir}"; then
        UNIFYCR_BUILD_DIR="$(cd .. && pwd)"
    else
        UNIFYCR_BUILD_DIR="$(cd ${builddir}/.. && pwd))"
    fi
    export UNIFYCR_BUILD_DIR
fi

#
# Source a script that is dynamically generated by 0001-setup.t.
#
export UNIFYCR_TEST_ENV_SCRIPT=$UNIFYCR_BUILD_DIR/t/test_run_env.sh
. $UNIFYCR_TEST_ENV_SCRIPT
export UNIFYCR_MOUNT_POINT=${UNIFYCR_MOUNT_POINT:-$(mktemp -d)}
export UNIFYCR_META_DB_PATH=${UNIFYCR_META_DB_PATH:-$(mktemp -d)}

#
# Configure UnifyCR runtime settings
#
export UNIFYCR_USE_SPILLOVER=1
export UNIFYCR_META_SERVER_RATIO=1
export UNIFYCR_META_DB_NAME=unifycr_db
export UNIFYCR_CHUNK_MEM=0
export UNIFYCR_SERVER_DEBUG_LOG=$UNIFYCR_META_DB_PATH/unifycrd_debuglog
export UNIFYCR_EXTERNAL_DATA_DIR=$UNIFYCR_META_DB_PATH
export UNIFYCR_EXTERNAL_META_DIR=$UNIFYCR_META_DB_PATH


# Set paths to executables
UNIFYCRD=$UNIFYCR_BUILD_DIR/server/src/unifycrd
TEST_WRITE_GOTCHA=$UNIFYCR_BUILD_DIR/client/tests/test_write_gotcha
TEST_READ_GOTCHA=$UNIFYCR_BUILD_DIR/client/tests/test_read_gotcha
SYS_OPEN=$UNIFYCR_BUILD_DIR/tests/sys_open

if test -n "$(which srun)"; then
    JOB_RUN_COMMAND="srun -n1 -N1"
elif test -n "$(which mpirun)"; then
    JOB_RUN_COMMAND="mpirun -wd $UNIFYCR_BUILD_DIR -np 1"
fi
export JOB_RUN_COMMAND

if test -z "$JOB_RUN_COMMAND"; then
    echo >&2 "Failed to find a suitable parallel job launcher"
    echo >&2 "Do you need to install OpenMPI or SLURM?"
    return 1
fi
